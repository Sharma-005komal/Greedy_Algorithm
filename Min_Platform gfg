
// { Driver Code Starts
// Program to find minimum number of platforms
// required on a railway station
#include <bits/stdc++.h>
using namespace std;


 // } Driver Code Ends
class Solution{
    public:
    //Function to find the minimum number of platforms required at the
    //railway station such that no train waits.
    
    void sort(int a[], int n)
    {
        int temp;
        for(int i=0; i<n; i++)
        {
            for(int j=i+1; j<n; j++)
            {
                if(a[i] > a[j])
                {
                    temp = a[i];
                    a[i] = a[j];
                    a[j] = temp;
                }
            }
        }
    }
    
    int findPlatform(int arr[], int dep[], int n)
    {
    	// Your code here
    	sort(arr,n);
    	sort(dep,n);
    	int plot = 1, res = 1;
    	int i=1, j=0;
    	while(i<n && j<n)
    	{
    	    if(arr[i] <= dep[j])
    	    {
    	        plot++;
    	        i++;
    	    }
    	    else if(arr[i] > dep[j])
    	    {
    	        plot--;
    	        j++;
    	    }
    	    if(plot > res)
    	    {
    	        res = plot;
    	    }
    	}
    	return res;
    }
};


// { Driver Code Starts.
// Driver code
int main()
{
    int t;
    cin>>t;
    while(t--) 
    {
        int n;
        cin>>n;
        int arr[n];
        int dep[n];
        for(int i=0;i<n;i++)
            cin>>arr[i];
        for(int j=0;j<n;j++){
            cin>>dep[j];
        }
        Solution ob;
        cout <<ob.findPlatform(arr, dep, n)<<endl;
    } 
   return 0;
}  // } Driver Code Ends
